{"id":"658b85a62caba10024f40bd6","title":"Cloudflare Worker で Google IAP の jwt ペイロードを検証する","image":null,"created":1703642535,"updated":1703642615,"lines":[{"id":"658b85a62caba10024f40bd6","text":"Cloudflare Worker で Google IAP の jwt ペイロードを検証する","created":1703642535,"updated":1703642535},{"id":"658b85a64ade4d000056129b","text":"from [20231212]","created":1703642535,"updated":1703642535},{"id":"658b85a64ade4d000056129c","text":"[Cloudflare Worker] で [Google IAP] の [jwt] ペイロードを検証する","created":1703642535,"updated":1703642545},{"id":"658b85a64ade4d000056129d","text":"\t[Cloudflare Access] 使えや!!という声が四面楚歌のように聞こえてくるが、まあ、テクニカルにはできるんで.....","created":1703642535,"updated":1703642535},{"id":"658b85a64ade4d000056129e","text":"\thttps://cloud.google.com/iap/docs/signed-headers-howto","created":1703642535,"updated":1703642535},{"id":"658b85a64ade4d000056129f","text":"\t[GCP] 側で設定して Cloudflare Worker にリクエストを流すようにすると request の headers に `x-goog-iap-jwt-assertion` として jwt のペイロードが含まって送られてくる","created":1703642535,"updated":1703642535},{"id":"658b85a64ade4d00005612a0","text":"\t[Node.js] のコードでは `google-auth-library` に実際の検証コードがあるので node コンパチ環境ではこれを使うでいけるのだが、Worker には当然 [WebCrypto] 相当の API しか生えてないし、fs とかもないのでそのまま使うことはできない","created":1703642535,"updated":1703642554},{"id":"658b85a64ade4d00005612a1","text":"\t仕方ないので `google-auth-library` を読み下してそれっぽいコードを実装した","created":1703642535,"updated":1703642535},{"id":"658b85a64ade4d00005612a2","text":"\t[JWK] 形式の公開鍵は https://www.gstatic.com/iap/verify/public_key-jwk にあるのでこれを fetch してくる","created":1703642535,"updated":1703642584},{"id":"658b85a64ade4d00005612a3","text":"\tJWT はヘッダとペイロードとシグネチャの3セグあるかをバリデートする","created":1703642535,"updated":1703642535},{"id":"658b85a64ade4d00005612a4","text":"\tヘッダとペイロードは `JSON.parse(atob(seg[0]))` みたいな感じでデコードする","created":1703642535,"updated":1703642535},{"id":"658b85a64ade4d00005612a5","text":"\tヘッダに `kid` が入ってるので、jwk の `keys` から該当する cert を探してくる","created":1703642535,"updated":1703642535},{"id":"658b85a64ade4d00005612a6","text":"\t見たところ [ES256] で署名されてるのでアルゴリズムには [ECDSA] を指定する","created":1703642535,"updated":1703642535},{"id":"658b85a64ade4d00005612a7","text":"\t\t無知なのでアレだけど、`importKey` は `{ name: 'ECDSA', namedCurve: 'P-256' }`、`verify` は `{ name: 'ECDSA', hash: { name: 'SHA-256' } }` をそれぞれ指定する","created":1703642535,"updated":1703642535},{"id":"658b85a64ade4d00005612a8","text":"\t`importKey` は何もしなくても jwk で取得できるので問題ないが、`verify` の方は引数が [ArrayBuffer] なので base64エンコード の文字列から起こすのが地味に面倒くさい","created":1703642535,"updated":1703642592},{"id":"658b85a64ade4d00005612a9","text":"\tとりあえずこれで検証自体はできるので、あとは iat と exp と iss と aud をそれぞれ検証すればよい","created":1703642535,"updated":1703642535},{"id":"658b85a64ade4d00005612aa","text":"\tworker => worker は service bindings で呼び出すにして、[workers.dev] を塞いでやれば IAP を通したリクエストだけが子 worker にやってくる状態がつくれる","created":1703642535,"updated":1703642601},{"id":"658b85a64ade4d00005612ab","text":"\tworker => pages は service bindigs ではつながらないので、pages.dev を fetch でつないでやるなどしないといけない","created":1703642535,"updated":1703642535},{"id":"658b85a64ade4d00005612ac","text":"\t\tここのリクエストに事前共有の値をヘッダにくっつけてリクエストを送って、リクエストを受け取る pages function でリクエストのヘッダを検証して、ヘッダがついていれば200を返して、なければ401とすることで擬似的な制限が可能になる","created":1703642535,"updated":1703642535},{"id":"658b85a64ade4d00005612ad","text":"\t\tただ、pages function を通らないアセット類に関してはガバガバなのでフルオープンになっちゃう","created":1703642535,"updated":1703642535},{"id":"658b85a64ade4d00005612ae","text":"\t\t\tAccess だとアセット類もちゃんと塞いでくれるので偉い","created":1703642535,"updated":1703642535},{"id":"658b85a64ade4d00005612af","text":"\t\t\tとはいえ現代のツールチェインを使ってるとだいたいアセットにはダイジェストがくっついてるので、攻撃したい人がドンズバで URL 当てないと引っ張ってこれないのでまあ妥協ラインとしてはそんなもんかなあと","created":1703642535,"updated":1703642535},{"id":"658b85a64ade4d00005612b0","text":"\tあと worker => pages でつなぐ時は `POST` の body が [ReadableStream] として入ってきてはいるけど、pages の fetch の body としては使えないってことになってるっぽくて、一旦 body を worker の中で json なり formData なり確定させないといけない","created":1703642535,"updated":1703642615},{"id":"658b85a64ade4d00005612b1","text":"\t\tこの時、formData だと headers の Content-Type に boundary が入ってて、headers をそのままパスしてると pages 側で formData として受け取れないので取り除いてやらないといけなかった","created":1703642535,"updated":1703642535},{"id":"658b85a64ade4d00005612b2","text":"","created":1703642535,"updated":1703642535}]}