{"id":"6407dca14adb29001dddf9b1","title":"20230308","image":"https://gyazo.com/d375cb2440575cdec32e0b7eb4b37cb6/raw","created":1678236837,"updated":1678294401,"lines":[{"id":"6407dca14adb29001dddf9b1","text":"20230308","created":1678236837,"updated":1678236837},{"id":"6407dca44ade4d0000dc4615","text":"#0308","created":1678236837,"updated":1678236837},{"id":"6407dca44ade4d0000dc4616","text":"","created":1678236837,"updated":1678236837},{"id":"6408bca84ade4d0000eb5359","text":"[Proxmox] の unprivileged [CT] だと [NFS]/[SMB] マウントできないっぽい","created":1678294184,"updated":1678294249},{"id":"6408bce94ade4d0000eb535b","text":"\tprivileged だと features から NFS なり [CIFS] なりを有効化すれば通るらしい","created":1678294250,"updated":1678294293},{"id":"6408bd284ade4d0000eb535c","text":"\t調べてみると [apparmor] 絡みで云々ということらしい","created":1678294313,"updated":1678294332},{"id":"6408bd3c4ade4d0000eb535d","text":"\tapparmor の設定ファイルっぽいやつをいじるパターンも試してみたんだけどパーミッションが通らず","created":1678294333,"updated":1678294354},{"id":"6408bd534ade4d0000eb535e","text":"\t[docker] のコンテナをつくりたいかつマウントもしたいって時は素直に [VM] を選択した方がよさそう","created":1678294355,"updated":1678294401},{"id":"6408bca84ade4d0000eb535a","text":"","created":1678294184,"updated":1678294184},{"id":"6408a88d4ade4d0000eb5350","text":"[Uptime Kuma] 導入","created":1678289038,"updated":1678289044},{"id":"6408a8a04ade4d0000eb5352","text":"\tテキトーに組んでたサービスが500になってて、そこそこ[死活監視]しておくかーという気持ちになった","created":1678289057,"updated":1678289089},{"id":"6408a8c24ade4d0000eb5353","text":"\t動画とかでよく見かける Uptime Kuma を CT にインストールしてみた","created":1678289090,"updated":1678289121},{"id":"6408a8e34ade4d0000eb5354","text":"\thttps://github.com/louislam/uptime-kuma","created":1678289124,"updated":1678289484},{"id":"6408aa4d4ade4d0000eb5355","text":"\tせっかく CT だしネイティブにインストールするかーとおもってインストールスクリプト叩いたけど、[node]/[npm] がない環境だとインストールスクリプトがうまく動かないみたい","created":1678289485,"updated":1678289537},{"id":"6408aa6c4ade4d0000eb5356","text":"\t\tテキトーに [Volta] 経由で node いれて、[pm2] をグローバルインストールしてスタートアップスクリプト叩いたらすっと動いた","created":1678289517,"updated":1678289560},{"id":"6408aac94ade4d0000eb5357","text":"\t[https://gyazo.com/d375cb2440575cdec32e0b7eb4b37cb6]","created":1678289610,"updated":1678289610},{"id":"6408aaca4ade4d0000eb5358","text":"\t謎の満足感","created":1678289610,"updated":1678289614},{"id":"6408a88d4ade4d0000eb5351","text":"","created":1678289038,"updated":1678289038},{"id":"640873444ade4d0000c1beb7","text":"[Dashy] 導入","created":1678275397,"updated":1678275404},{"id":"6408734b4ade4d0000c1beb9","text":"\thttps://dashy.to/","created":1678275404,"updated":1678275415},{"id":"640873574ade4d0000c1beba","text":"\tいわゆる管理画面の管理画面","created":1678275416,"updated":1678275421},{"id":"640873c14ade4d0000c1bebb","text":"\t早速あっちこっちに管理画面が発生してきてカオスになってきたので自分用の便利ブックマークみたいな感じでとりあえず導入","created":1678275522,"updated":1678275561},{"id":"640873444ade4d0000c1beb8","text":"","created":1678275397,"updated":1678275397},{"id":"64085f1a4ade4d0000c1beae","text":"[Proxmox] の管理画面の証明書をちゃんとする","created":1678270235,"updated":1678270280},{"id":"64085f2e4ade4d0000c1beb0","text":"\thttps://www.smarthomebeginner.com/proxmox-ssl-certificate-with-letsencrypt/","created":1678270255,"updated":1678270255},{"id":"64085f304ade4d0000c1beb1","text":"\t[Cloudflare DNS] だと簡単にできそうだったので [DNS] を [Cloudflare] に移した","created":1678270257,"updated":1678270306},{"id":"64085f624ade4d0000c1beb2","text":"\t\t[Zone] ができたので [Wildebeest] が立ち上げられるかも","created":1678270307,"updated":1678270322},{"id":"64085f724ade4d0000c1beb3","text":"\t↑のページに書いてある感じで Cloudflare のトークンやらなんやらを [ACME] の Plugin として登録して、node の System => Certificates から ACME を Add して、発行したいドメインを設定して、Order Certificates Now するとタスクが走って cert が出来上がった","created":1678270323,"updated":1678270450},{"id":"64085ff24ade4d0000c1beb4","text":"\t\tリロードしろと言われるので、リロードするついでに DNS で当該ドメインを IP に振るように設定を入れればよい","created":1678270451,"updated":1678270506},{"id":"6408602b4ade4d0000c1beb5","text":"\t\t\tルーターの DNS まわりの機能で設定した","created":1678270508,"updated":1678270545},{"id":"640860514ade4d0000c1beb6","text":"\tポートは相変わらず 8006 でアクセスすると、証明書で怒られることなく管理画面にアクセスできた","created":1678270546,"updated":1678270598},{"id":"64085f1a4ade4d0000c1beaf","text":"","created":1678270235,"updated":1678270235},{"id":"640842264ade4d0000dbbec7","text":"[Home Assistant] [iOS] App","created":1678262823,"updated":1678262837},{"id":"640842354ade4d0000dbbec9","text":"\tアプリも存在していて、つながってるネットワーク上の Server みにいってくれて、ささっとセットアップしてくれるし、[Apple Watch] のアプリも存在しているので大変便利","created":1678262838,"updated":1678262889},{"id":"640842684ade4d0000dbbeca","text":"\tWatch から開いた画面には設定の Actions で設定している項目が表示されるようになっているっぽい","created":1678262889,"updated":1678262921},{"id":"640842894ade4d0000dbbecb","text":"\t\tAction の設定のところで、適当に設定をするとサンプルになるトリガーが表示されるので、あとは HA の設定の Automation で Event Trigger を Trigger とする Automation をつくれば Watch からポンでなんでも動かせる","created":1678262922,"updated":1678263024},{"id":"640843c84ade4d0000dbbece","text":"\t\t\t[alexa_media_player] をいれてあるので、試しにWatch タップすると [Alexa] が喋る Automation 作ってみたら、楽しすぎてサルみたいにはしゃいで連打してしまった","created":1678263241,"updated":1678264804},{"id":"640842f34ade4d0000dbbecc","text":"\t\t欲をいえばイイ感じの UI をサクッと作れれば御の字だけど、ポンできるだけでまあ十分かな","created":1678263027,"updated":1678263098},{"id":"6408433b4ade4d0000dbbecd","text":"\tあとは Watch の Complication も作れるみたいだけど、複雑そうだしそもそも Complication パンパンなので増やせん....","created":1678263100,"updated":1678263133},{"id":"640842274ade4d0000dbbec8","text":"","created":1678262823,"updated":1678262823},{"id":"6407dca64ade4d0000dc4617","text":"[Home Assistant] + [alexa_media_player]","created":1678236838,"updated":1678236920},{"id":"6407dcda4ade4d0000dc4619","text":"\thttps://github.com/custom-components/alexa_media_player","created":1678236891,"updated":1678236929},{"id":"6407dd024ade4d0000dc461a","text":"\tAdd-ons から Terminal & SSH をインストールして、cli で入れるようにする","created":1678236930,"updated":1678237027},{"id":"6407dd454ade4d0000dc461b","text":"\t[HACS] というコミュニティストアをインストールする","created":1678236998,"updated":1678237065},{"id":"6407dd884ade4d0000dc461c","text":"\t\thttps://hacs.xyz/","created":1678237065,"updated":1678237065},{"id":"6407dd894ade4d0000dc461d","text":"\treboot すると HACS の行が増えるので、HACS から alexa_media_player をインストールする","created":1678237066,"updated":1678237106},{"id":"6407ddb24ade4d0000dc461e","text":"\t\t[Amazon] の認証を通すと接続されている [Alexa] 関連のデバイスがデバイス一覧にリストされる","created":1678237107,"updated":1678237173},{"id":"6407ddf74ade4d0000dc461f","text":"\tアドオンの名前が微妙説が若干あるが、media player としての機能ももちろんあるものの、Alexa に向けてカスタムコマンドを発行できるので便利","created":1678237175,"updated":1678237813},{"id":"6407dfe74ade4d0000dc4620","text":"\t\taction で call service, service は `media_player.play_media` で targets に alexa の entity を指定して、`data.media_content_id` に実行したい(音声)コマンド、`data.media_content_type` は custom とすることで任意のコマンドを送りつけられた","created":1678237671,"updated":1678237795},{"id":"6407e0cb4ade4d0000dc4621","text":"\t手弁当でホームデバイス系を叩く時にどうしても Alexa や [Google Asisstant] 向けの integration は生えてるけど、それ以外のルートが全然ねえやつがちょくちょくあって、そういうやつをどうにかするのに便利そう","created":1678237899,"updated":1678238046},{"id":"6407e1664ade4d0000dc4622","text":"\t\tただ、状態をもつやつとかは Alexa 側とステートを共有できるわけではなさそうなので、あくまでワンショットとして成立するやつに限られてしまうのかなー","created":1678238054,"updated":1678238113},{"id":"6407dca64ade4d0000dc4618","text":"","created":1678236838,"updated":1678236838}]}