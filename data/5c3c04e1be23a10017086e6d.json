{"id":"5c3c04e1be23a10017086e6d","title":"bottlejsでDIを試す - dev.jgs.me","image":null,"created":1412694000,"updated":1563737062,"lines":[{"id":"5c3c04e14ade4d0000c9dd8c","text":"bottlejsでDIを試す - dev.jgs.me","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dd8e","text":"[https://github.com/young-steveo/bottlejs https://github.com/young-steveo/bottlejs]","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dd8f","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dd90","text":"[**** tl;dr]","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dd92","text":" `bottlejs` を使うと最小構成ぐらいの DI ができる","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dd93","text":" 依存しているモジュールやライブラリをきれいにまとめて扱えるようになるので便利","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dd94","text":" 記述量が増えたり、呼び出し元で呼び出すモジュールの依存関係を把握してないといけなくなったりするデメリットもある","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dd96","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dd97","text":"[**** [BottleJS] について]","created":1412694000,"updated":1563736980},{"id":"5c3c04e14ade4d0000c9dd99","text":"BottleJS は [Javascript]/[Node.js] の [DI] の micro container だ。","created":1412694000,"updated":1563736998},{"id":"5c3c04e14ade4d0000c9dd9a","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dd9b","text":"code: (js)","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dd9c","text":" var Barley = function() {};","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dd9d","text":" var Hops = function() {};","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dd9e","text":" var Water = function() {};","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dd9f","text":" var Beer = function(barley, hops, water) { /* A beer service, :yum: */ };","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dda0","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dda1","text":"これで","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dda2","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dda3","text":"code: (js)","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dda4","text":" var bottle = new Bottle();","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dda5","text":" bottle.service('Barley', Barley);","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dda6","text":" bottle.service('Hops', Hops);","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dda7","text":" bottle.service('Water', Water);","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dda8","text":" bottle.service('Beer', Beer, 'Barley', 'Hops', 'Water');","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dda9","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddaa","text":"こういうことができるようになるらしい。サンプルコードがモジュールの名前ともマッチしていてすげーよかったので試してみることにした。","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddab","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddac","text":"試してみると、Node.js で抱えるいくつかの問題を解決できることに気付いたので試しにこれに乗っかってコードを書いてみている。","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddad","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddae","text":"[**** いいところ]","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddb0","text":"[*** テストでモックを作るのが楽になる]","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddb2","text":"例えば、`request` とかを使って外部と通信するようなモジュールをテストする場合、`sinon` とかで `fakeserver` を作ったりして試すことになるとおもうんだけど、そもそも `request` 自体を差し替え可能にしておくことでこれをしなくてよくなる。","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddb3","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddb4","text":"code: (coffee)","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddb5","text":" module.exports = class Some","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddb6","text":"   constructor: (@request)->","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddb7","text":" ","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddb8","text":"   get: (url)->","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddb9","text":"     @request url, (err, res, body)-> # ...","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddba","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddbb","text":"というような `lib/some.coffee` を用意して","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddbc","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddbd","text":"code: (coffee)","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddbe","text":" bottle = new Bottle()","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddbf","text":" bottle.service 'request', -> require 'request'","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddc0","text":" bottle.service 'Some', require('./lib/some'), 'request'","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddc1","text":" ","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddc2","text":" bottle.container.Some.get url","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddc3","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddc4","text":"とすることで `request` を注入することができる。テストでは","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddc5","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddc6","text":"code: (coffee)","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddc7","text":" describe 'Some', ->","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddc8","text":"   it 'blah blah', ->","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddc9","text":"     bottle = new Bottle()","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddca","text":"     bottle.service 'request', -> (str, callback)-> callback null, null, 'fake response'","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddcb","text":"     bottle.service 'Some', require('./lib/some'), 'request'","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddcc","text":"     bottle.container.Some.get # ...","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddcd","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddce","text":"みたいな感じでテストを書けるようになる。`request` がエラったときを試したいときは","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddcf","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddd0","text":"code: (coffee)","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddd1","text":" bottle.service 'request', -> (str, callback)-> callback new Error('blah')","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddd2","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddd3","text":"というようにしてやれば強制的にエラーを発生させて挙動を確認することができる。","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddd4","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddd5","text":"[*** `require` が相対パスで解決されるのが困る問題をちょっと緩和できる]","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddd7","text":"node.js の `require` はモジュール名でない場合相対パスで解決されるので「あれ？あのモジュールってこのファイルからだとどうなるんだっけ...」みたいなのが発生する。これが `bottlejs` だと依存モジュールをその場で呼び出すことになるのでちょっと緩和できる(とおもう)。","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddd8","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddd9","text":"code:_","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddda","text":" |--- index.coffee","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dddb","text":" |--- client","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dddc","text":"      |--- model","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dddd","text":"           |--- some.coffee","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddde","text":"      |--- controller","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dddf","text":"           |--- some.coffee","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dde0","text":" |--- util","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dde1","text":"      |--- some.coffee","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dde2","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dde3","text":"というような構成だったときに","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dde4","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dde5","text":"code: (coffee)","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dde6","text":" module.exports = class SomeController","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dde7","text":"   constructor: ->","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dde8","text":"     @model = require '../model/some'","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dde9","text":"     @someutil  = require '../../util/some'","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddea","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddeb","text":"みたいな感じだったやつが、`SomeController` 側では","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddec","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9dded","text":"code: (coffee)","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddee","text":" module.exports = class SomeController","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddef","text":"   constructor: (@model, @someutil)->","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddf0","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddf1","text":"でよくなって、これを使うコード中で","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddf2","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddf3","text":"code: (coffee)","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddf4","text":" bottle = new Bottle()","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddf5","text":" bottle.service 'SomeUtil', require './util/some'","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddf6","text":" bottle.service 'SomeModel', require './client/model/some'","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddf7","text":" bottle.service 'SomeController', require './client/controller/some', 'SomeModel', 'SomeUtil'","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddf8","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddf9","text":"としてやればよくなる。","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddfa","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddfb","text":"[*** CoffeeScript の class 構文と相性がよさそう]","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddfd","text":"上にも書いてきた通り、`constructor` に依存の解決系を書いて各メソッドでそれらを使ったコードを書くみたいな感じで書けるのでスッキリしていい。","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddfe","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9ddff","text":"[**** よくないところ]","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9de01","text":"[*** 記述することは増える]","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9de03","text":"`bottle =...` みたいな依存管理系のコードが増えるので記述量自体は増えるとおもう。","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9de04","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9de05","text":"[*** いちいちモジュールの依存まわりを呼び出し元が知ってないといけなくなる]","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9de07","text":"モジュールで `require` していれば、呼び出し元がそのモジュールがどんなモジュールに依存してるかを知らなくても呼び出すことができるが、上のようなコードスタイルにすると呼び出す前に依存を解決しないといけなくなるので呼び出すモジュールがなにに依存してるか確認してそれを注入してやらないといけなくなる手間が発生する。","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9de08","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9de09","text":"もうしばらく使ってみたいとおもいます。","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9de0a","text":"","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9de0b","text":"[* original: http://dev.jgs.me/2014/10/08/dependency-injection-in-node-js]","created":1412694000,"updated":1412694000},{"id":"5c3c04e14ade4d0000c9de0c","text":"#20141008 #1008","created":1412694000,"updated":1563737062},{"id":"5d34bbdf4ade4d00004ff150","text":"","created":1563737057,"updated":1563737057}]}