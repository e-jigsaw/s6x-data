{"id":"63b24319a18606001d3b5a77","title":"Next.js から Astro に遷宮","image":null,"created":1672626970,"updated":1672626974,"lines":[{"id":"63b24319a18606001d3b5a77","text":"Next.js から Astro に遷宮","created":1672626970,"updated":1672626970},{"id":"63b243194ade4d0000c24a29","text":"from [20221228] #1228","created":1672626970,"updated":1672626974},{"id":"63b243194ade4d0000c24a2a","text":"[Next.js] から [Astro] に遷宮","created":1672626970,"updated":1672626970},{"id":"63b243194ade4d0000c24a2b","text":"\t[201909]あたりに Next.js へ遷宮した自分のポータルサイト的なやつを Astro に書き換えた","created":1672626970,"updated":1672626970},{"id":"63b243194ade4d0000c24a2c","text":"\t\t[Scrapbox を中心にしたコンテンツ生成]","created":1672626970,"updated":1672626970},{"id":"63b243194ade4d0000c24a2d","text":"\t\thttps://github.com/kbystk/y/pull/31","created":1672626970,"updated":1672626970},{"id":"63b243194ade4d0000c24a2e","text":"\tnext@13 で追加された `appDir` がまだ Static Export に対応していなかったのと、[React] も next も元々オーバーキル感が強くて微妙だとおもっていたので思い切って書き換えた","created":1672626970,"updated":1672626970},{"id":"63b243194ade4d0000c24a2f","text":"\t\t当時は [SSG] でイイ感じにパッケージングされてる選択肢が限られていて、消極的に next を採用したのもあり","created":1672626970,"updated":1672626970},{"id":"63b243194ade4d0000c24a30","text":"\t最近はすっかり [vite] ばっかり使ってて、いける手応えが結構ある","created":1672626970,"updated":1672626970},{"id":"63b243194ade4d0000c24a31","text":"\t\t[Sveltekit] か [Qwik City] あたりも検討したが、[Svelte] はやっぱり svelte のテンプレートの記法に抵抗感があるのと、Qwik はまだ1.0じゃないのもあるけどいろいろ不安定で変更も多いので","created":1672626970,"updated":1672626970},{"id":"63b243194ade4d0000c24a32","text":"\t\tAstro は1.0出たし、テンプレートの記法はベター JSX といってよいと感じる","created":1672626970,"updated":1672626970},{"id":"63b243194ade4d0000c24a33","text":"\t\t\tもちろん JSX はコンパイルすればピュアな JS に落ちるという利点があるとはおもうが、だから何？って最近はおもってきた","created":1672626970,"updated":1672626970},{"id":"63b243194ade4d0000c24a34","text":"\t\t\tどうせ [TypeScript] で書くし、[babel] はもうほぼ使わんけど [swc] にせよなんらかのコンパイルは挟むわけなので、じゃあ多少のテンプレートは許容できるかなと","created":1672626970,"updated":1672626970},{"id":"63b243194ade4d0000c24a35","text":"\tTIL","created":1672626970,"updated":1672626970},{"id":"63b243194ade4d0000c24a36","text":"\t\tsvg をインラインで読みたい:","created":1672626970,"updated":1672626970},{"id":"63b243194ade4d0000c24a37","text":"\t\t\tfrontmatter 部分に `const { default: innerHTML } = await import(\"some.svg?raw\");` てな具合で import すると `innerHTML` には svg の中身が string として格納されるので、あとはこいつをテンプレートで参照すればよい","created":1672626970,"updated":1672626970},{"id":"63b243194ade4d0000c24a38","text":"\t\tjson の string を union に upcast したい:","created":1672626970,"updated":1672626970},{"id":"63b243194ade4d0000c24a39","text":"\t\t\tjson の特定の key には string の union として提供されている型の中身しか入ってないけど、それを表現する術がねえ....と困るのだが、`hoge as Foo` 的な感じで `as` を使っても、string は `Foo` に upcast できないよ〜んと怒られてしまう","created":1672626970,"updated":1672626970},{"id":"63b243194ade4d0000c24a3a","text":"\t\t\tあまり good なプラクティスにはみえないけど `hoge as unknown as Foo` と一旦 `unknown` に落としてやることで無理矢理 upcast できる","created":1672626970,"updated":1672626970},{"id":"63b243194ade4d0000c24a3b","text":"\t\tVSC でフォーマットされたい:","created":1672626970,"updated":1672626970},{"id":"63b243194ade4d0000c24a3c","text":"\t\t\tAstro の ext 入れたらイイ感じになるのかなとおもったら別途 [prettier] の設定をいれないとダメだった","created":1672626970,"updated":1672626970},{"id":"63b243194ade4d0000c24a3d","text":"\t\t\t\thttps://github.com/withastro/prettier-plugin-astro","created":1672626970,"updated":1672626970},{"id":"63b243194ade4d0000c24a3e","text":"\t\t\t\tまた、[pnpm] 使ってると巻き上げられてるので https://github.com/withastro/prettier-plugin-astro#pnpm-support-1 に従って設定しておく","created":1672626970,"updated":1672626970},{"id":"63b243194ade4d0000c24a3f","text":"","created":1672626970,"updated":1672626970}]}